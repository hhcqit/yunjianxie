<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinicalmall.kuaixiu.persistent.dao.TaskCommentMapper">
  <resultMap id="BaseResultMap" type="com.clinicalmall.kuaixiu.persistent.domain.TaskComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleteStatus" jdbcType="INTEGER" property="deleteStatus" />
    <result column="taskId" jdbcType="BIGINT" property="taskId" />
    <result column="createUser" jdbcType="BIGINT" property="createUser" />
    <result column="service" jdbcType="INTEGER" property="service" />
    <result column="technology" jdbcType="INTEGER" property="technology" />
    <result column="response" jdbcType="INTEGER" property="response" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="reserved" jdbcType="VARCHAR" property="reserved" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, deleteStatus, taskId, createUser, service, technology, response, 
    description, reserved
  </sql>
  <select id="selectByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskCommentExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
    <include refid="MysqlDialect" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskCommentExample">
    delete from task_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_comment (createTime, deleteStatus, taskId, 
      createUser, service, technology, 
      response, description, reserved
      )
    values (#{createTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}, #{taskId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=BIGINT}, #{service,jdbcType=INTEGER}, #{technology,jdbcType=INTEGER}, 
      #{response,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{reserved,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="deleteStatus != null">
        deleteStatus,
      </if>
      <if test="taskId != null">
        taskId,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="service != null">
        service,
      </if>
      <if test="technology != null">
        technology,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="reserved != null">
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="service != null">
        #{service,jdbcType=INTEGER},
      </if>
      <if test="technology != null">
        #{technology,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        #{response,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskCommentExample" resultType="java.lang.Long">
    select count(*) from task_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        taskId = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.service != null">
        service = #{record.service,jdbcType=INTEGER},
      </if>
      <if test="record.technology != null">
        technology = #{record.technology,jdbcType=INTEGER},
      </if>
      <if test="record.response != null">
        response = #{record.response,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved != null">
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_comment
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      taskId = #{record.taskId,jdbcType=BIGINT},
      createUser = #{record.createUser,jdbcType=BIGINT},
      service = #{record.service,jdbcType=INTEGER},
      technology = #{record.technology,jdbcType=INTEGER},
      response = #{record.response,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      reserved = #{record.reserved,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskComment">
    update task_comment
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        taskId = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=INTEGER},
      </if>
      <if test="technology != null">
        technology = #{technology,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clinicalmall.kuaixiu.persistent.domain.TaskComment">
    update task_comment
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      taskId = #{taskId,jdbcType=BIGINT},
      createUser = #{createUser,jdbcType=BIGINT},
      service = #{service,jdbcType=INTEGER},
      technology = #{technology,jdbcType=INTEGER},
      response = #{response,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and _databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and _databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and _databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
</mapper>