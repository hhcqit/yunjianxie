<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinicalmall.kuaixiu.persistent.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.clinicalmall.kuaixiu.persistent.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleteStatus" jdbcType="INTEGER" property="deleteStatus" />
    <result column="orgId" jdbcType="BIGINT" property="orgId" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="userType" jdbcType="INTEGER" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="blacklistFlag" jdbcType="INTEGER" property="blacklistFlag" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="headImgUrl" jdbcType="VARCHAR" property="headImgUrl" />
    <result column="reserved" jdbcType="VARCHAR" property="reserved" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, deleteStatus, orgId, dept, userName, password, realName, userType, 
    email, blacklistFlag, updateTime, headImgUrl, reserved, remark
  </sql>
  <select id="selectByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.UserExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
    <include refid="MysqlDialect" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clinicalmall.kuaixiu.persistent.domain.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (createTime, deleteStatus, orgId, 
      dept, userName, password, 
      realName, userType, email, 
      blacklistFlag, updateTime, headImgUrl, 
      reserved, remark)
    values (#{createTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}, #{orgId,jdbcType=BIGINT}, 
      #{dept,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{blacklistFlag,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{headImgUrl,jdbcType=VARCHAR}, 
      #{reserved,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="deleteStatus != null">
        deleteStatus,
      </if>
      <if test="orgId != null">
        orgId,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="userType != null">
        userType,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="blacklistFlag != null">
        blacklistFlag,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="headImgUrl != null">
        headImgUrl,
      </if>
      <if test="reserved != null">
        reserved,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="blacklistFlag != null">
        #{blacklistFlag,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headImgUrl != null">
        #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        #{reserved,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        orgId = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        userType = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.blacklistFlag != null">
        blacklistFlag = #{record.blacklistFlag,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headImgUrl != null">
        headImgUrl = #{record.headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved != null">
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      orgId = #{record.orgId,jdbcType=BIGINT},
      dept = #{record.dept,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      userType = #{record.userType,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      blacklistFlag = #{record.blacklistFlag,jdbcType=INTEGER},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      headImgUrl = #{record.headImgUrl,jdbcType=VARCHAR},
      reserved = #{record.reserved,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.User">
    update user
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        orgId = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        userType = #{userType,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="blacklistFlag != null">
        blacklistFlag = #{blacklistFlag,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headImgUrl != null">
        headImgUrl = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clinicalmall.kuaixiu.persistent.domain.User">
    update user
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      orgId = #{orgId,jdbcType=BIGINT},
      dept = #{dept,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      userType = #{userType,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      blacklistFlag = #{blacklistFlag,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      headImgUrl = #{headImgUrl,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and _databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and _databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and _databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
</mapper>