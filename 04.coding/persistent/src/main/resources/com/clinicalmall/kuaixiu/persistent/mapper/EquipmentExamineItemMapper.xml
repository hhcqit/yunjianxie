<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinicalmall.kuaixiu.persistent.dao.EquipmentExamineItemMapper">
  <resultMap id="BaseResultMap" type="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleteStatus" jdbcType="INTEGER" property="deleteStatus" />
    <result column="examineId" jdbcType="BIGINT" property="examineId" />
    <result column="createUser" jdbcType="BIGINT" property="createUser" />
    <result column="updateUser" jdbcType="BIGINT" property="updateUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="standardValue" jdbcType="VARCHAR" property="standardValue" />
    <result column="measureValue" jdbcType="VARCHAR" property="measureValue" />
    <result column="deviationValue" jdbcType="VARCHAR" property="deviationValue" />
    <result column="isQualified" jdbcType="INTEGER" property="isQualified" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="reserved" jdbcType="VARCHAR" property="reserved" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, deleteStatus, examineId, createUser, updateUser, updateTime, name, 
    unit, standardValue, measureValue, deviationValue, isQualified, remark, reserved
  </sql>
  <select id="selectByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItemExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment_examine_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
    <include refid="MysqlDialect" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from equipment_examine_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from equipment_examine_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItemExample">
    delete from equipment_examine_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equipment_examine_item (createTime, deleteStatus, examineId, 
      createUser, updateUser, updateTime, 
      name, unit, standardValue, 
      measureValue, deviationValue, isQualified, 
      remark, reserved)
    values (#{createTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}, #{examineId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{standardValue,jdbcType=VARCHAR}, 
      #{measureValue,jdbcType=VARCHAR}, #{deviationValue,jdbcType=VARCHAR}, #{isQualified,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{reserved,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equipment_examine_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="deleteStatus != null">
        deleteStatus,
      </if>
      <if test="examineId != null">
        examineId,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="standardValue != null">
        standardValue,
      </if>
      <if test="measureValue != null">
        measureValue,
      </if>
      <if test="deviationValue != null">
        deviationValue,
      </if>
      <if test="isQualified != null">
        isQualified,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="reserved != null">
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="examineId != null">
        #{examineId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="standardValue != null">
        #{standardValue,jdbcType=VARCHAR},
      </if>
      <if test="measureValue != null">
        #{measureValue,jdbcType=VARCHAR},
      </if>
      <if test="deviationValue != null">
        #{deviationValue,jdbcType=VARCHAR},
      </if>
      <if test="isQualified != null">
        #{isQualified,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItemExample" resultType="java.lang.Long">
    select count(*) from equipment_examine_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update equipment_examine_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.examineId != null">
        examineId = #{record.examineId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.standardValue != null">
        standardValue = #{record.standardValue,jdbcType=VARCHAR},
      </if>
      <if test="record.measureValue != null">
        measureValue = #{record.measureValue,jdbcType=VARCHAR},
      </if>
      <if test="record.deviationValue != null">
        deviationValue = #{record.deviationValue,jdbcType=VARCHAR},
      </if>
      <if test="record.isQualified != null">
        isQualified = #{record.isQualified,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved != null">
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update equipment_examine_item
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      examineId = #{record.examineId,jdbcType=BIGINT},
      createUser = #{record.createUser,jdbcType=BIGINT},
      updateUser = #{record.updateUser,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      standardValue = #{record.standardValue,jdbcType=VARCHAR},
      measureValue = #{record.measureValue,jdbcType=VARCHAR},
      deviationValue = #{record.deviationValue,jdbcType=VARCHAR},
      isQualified = #{record.isQualified,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      reserved = #{record.reserved,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItem">
    update equipment_examine_item
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="examineId != null">
        examineId = #{examineId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="standardValue != null">
        standardValue = #{standardValue,jdbcType=VARCHAR},
      </if>
      <if test="measureValue != null">
        measureValue = #{measureValue,jdbcType=VARCHAR},
      </if>
      <if test="deviationValue != null">
        deviationValue = #{deviationValue,jdbcType=VARCHAR},
      </if>
      <if test="isQualified != null">
        isQualified = #{isQualified,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clinicalmall.kuaixiu.persistent.domain.EquipmentExamineItem">
    update equipment_examine_item
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      examineId = #{examineId,jdbcType=BIGINT},
      createUser = #{createUser,jdbcType=BIGINT},
      updateUser = #{updateUser,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      standardValue = #{standardValue,jdbcType=VARCHAR},
      measureValue = #{measureValue,jdbcType=VARCHAR},
      deviationValue = #{deviationValue,jdbcType=VARCHAR},
      isQualified = #{isQualified,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and _databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and _databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and _databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
</mapper>