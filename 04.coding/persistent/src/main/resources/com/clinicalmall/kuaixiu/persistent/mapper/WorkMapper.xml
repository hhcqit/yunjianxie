<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinicalmall.kuaixiu.persistent.dao.WorkMapper">
  <resultMap id="BaseResultMap" type="com.clinicalmall.kuaixiu.persistent.domain.Work">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleteStatus" jdbcType="INTEGER" property="deleteStatus" />
    <result column="planId" jdbcType="BIGINT" property="planId" />
    <result column="periodType" jdbcType="INTEGER" property="periodType" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="executePermission" jdbcType="INTEGER" property="executePermission" />
    <result column="origin" jdbcType="INTEGER" property="origin" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="orgId" jdbcType="BIGINT" property="orgId" />
    <result column="labId" jdbcType="BIGINT" property="labId" />
    <result column="providerId" jdbcType="BIGINT" property="providerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createUser" jdbcType="BIGINT" property="createUser" />
    <result column="updateUser" jdbcType="BIGINT" property="updateUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="equipId" jdbcType="BIGINT" property="equipId" />
    <result column="executeOrgId" jdbcType="BIGINT" property="executeOrgId" />
    <result column="executeUser" jdbcType="BIGINT" property="executeUser" />
    <result column="certificateNo" jdbcType="VARCHAR" property="certificateNo" />
    <result column="certificateFileName" jdbcType="VARCHAR" property="certificateFileName" />
    <result column="certificateFilePath" jdbcType="VARCHAR" property="certificateFilePath" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="acceptTime" jdbcType="TIMESTAMP" property="acceptTime" />
    <result column="executeTime" jdbcType="TIMESTAMP" property="executeTime" />
    <result column="finishedTime" jdbcType="TIMESTAMP" property="finishedTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="reserved" jdbcType="VARCHAR" property="reserved" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, deleteStatus, planId, periodType, period, executePermission, origin, 
    type, orgId, labId, providerId, status, createUser, updateUser, updateTime, equipId, 
    executeOrgId, executeUser, certificateNo, certificateFileName, certificateFilePath, 
    name, content, result, acceptTime, executeTime, finishedTime, remark, reserved
  </sql>
  <select id="selectByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.WorkExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
    <include refid="MysqlDialect" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from work
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.WorkExample">
    delete from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clinicalmall.kuaixiu.persistent.domain.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work (createTime, deleteStatus, planId, 
      periodType, period, executePermission, 
      origin, type, orgId, 
      labId, providerId, status, 
      createUser, updateUser, updateTime, 
      equipId, executeOrgId, executeUser, 
      certificateNo, certificateFileName, certificateFilePath, 
      name, content, result, 
      acceptTime, executeTime, finishedTime, 
      remark, reserved)
    values (#{createTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}, #{planId,jdbcType=BIGINT}, 
      #{periodType,jdbcType=INTEGER}, #{period,jdbcType=INTEGER}, #{executePermission,jdbcType=INTEGER}, 
      #{origin,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{orgId,jdbcType=BIGINT}, 
      #{labId,jdbcType=BIGINT}, #{providerId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{equipId,jdbcType=BIGINT}, #{executeOrgId,jdbcType=BIGINT}, #{executeUser,jdbcType=BIGINT}, 
      #{certificateNo,jdbcType=VARCHAR}, #{certificateFileName,jdbcType=VARCHAR}, #{certificateFilePath,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{acceptTime,jdbcType=TIMESTAMP}, #{executeTime,jdbcType=TIMESTAMP}, #{finishedTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{reserved,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="deleteStatus != null">
        deleteStatus,
      </if>
      <if test="planId != null">
        planId,
      </if>
      <if test="periodType != null">
        periodType,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="executePermission != null">
        executePermission,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orgId != null">
        orgId,
      </if>
      <if test="labId != null">
        labId,
      </if>
      <if test="providerId != null">
        providerId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="equipId != null">
        equipId,
      </if>
      <if test="executeOrgId != null">
        executeOrgId,
      </if>
      <if test="executeUser != null">
        executeUser,
      </if>
      <if test="certificateNo != null">
        certificateNo,
      </if>
      <if test="certificateFileName != null">
        certificateFileName,
      </if>
      <if test="certificateFilePath != null">
        certificateFilePath,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="acceptTime != null">
        acceptTime,
      </if>
      <if test="executeTime != null">
        executeTime,
      </if>
      <if test="finishedTime != null">
        finishedTime,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="reserved != null">
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=BIGINT},
      </if>
      <if test="periodType != null">
        #{periodType,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="executePermission != null">
        #{executePermission,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="labId != null">
        #{labId,jdbcType=BIGINT},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="equipId != null">
        #{equipId,jdbcType=BIGINT},
      </if>
      <if test="executeOrgId != null">
        #{executeOrgId,jdbcType=BIGINT},
      </if>
      <if test="executeUser != null">
        #{executeUser,jdbcType=BIGINT},
      </if>
      <if test="certificateNo != null">
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="certificateFileName != null">
        #{certificateFileName,jdbcType=VARCHAR},
      </if>
      <if test="certificateFilePath != null">
        #{certificateFilePath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeTime != null">
        #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedTime != null">
        #{finishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clinicalmall.kuaixiu.persistent.domain.WorkExample" resultType="java.lang.Long">
    select count(*) from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.planId != null">
        planId = #{record.planId,jdbcType=BIGINT},
      </if>
      <if test="record.periodType != null">
        periodType = #{record.periodType,jdbcType=INTEGER},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.executePermission != null">
        executePermission = #{record.executePermission,jdbcType=INTEGER},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        orgId = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.labId != null">
        labId = #{record.labId,jdbcType=BIGINT},
      </if>
      <if test="record.providerId != null">
        providerId = #{record.providerId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.equipId != null">
        equipId = #{record.equipId,jdbcType=BIGINT},
      </if>
      <if test="record.executeOrgId != null">
        executeOrgId = #{record.executeOrgId,jdbcType=BIGINT},
      </if>
      <if test="record.executeUser != null">
        executeUser = #{record.executeUser,jdbcType=BIGINT},
      </if>
      <if test="record.certificateNo != null">
        certificateNo = #{record.certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateFileName != null">
        certificateFileName = #{record.certificateFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateFilePath != null">
        certificateFilePath = #{record.certificateFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptTime != null">
        acceptTime = #{record.acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executeTime != null">
        executeTime = #{record.executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishedTime != null">
        finishedTime = #{record.finishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved != null">
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deleteStatus,jdbcType=INTEGER},
      planId = #{record.planId,jdbcType=BIGINT},
      periodType = #{record.periodType,jdbcType=INTEGER},
      period = #{record.period,jdbcType=INTEGER},
      executePermission = #{record.executePermission,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      orgId = #{record.orgId,jdbcType=BIGINT},
      labId = #{record.labId,jdbcType=BIGINT},
      providerId = #{record.providerId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      createUser = #{record.createUser,jdbcType=BIGINT},
      updateUser = #{record.updateUser,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      equipId = #{record.equipId,jdbcType=BIGINT},
      executeOrgId = #{record.executeOrgId,jdbcType=BIGINT},
      executeUser = #{record.executeUser,jdbcType=BIGINT},
      certificateNo = #{record.certificateNo,jdbcType=VARCHAR},
      certificateFileName = #{record.certificateFileName,jdbcType=VARCHAR},
      certificateFilePath = #{record.certificateFilePath,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      acceptTime = #{record.acceptTime,jdbcType=TIMESTAMP},
      executeTime = #{record.executeTime,jdbcType=TIMESTAMP},
      finishedTime = #{record.finishedTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      reserved = #{record.reserved,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clinicalmall.kuaixiu.persistent.domain.Work">
    update work
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        planId = #{planId,jdbcType=BIGINT},
      </if>
      <if test="periodType != null">
        periodType = #{periodType,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="executePermission != null">
        executePermission = #{executePermission,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        orgId = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="labId != null">
        labId = #{labId,jdbcType=BIGINT},
      </if>
      <if test="providerId != null">
        providerId = #{providerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="equipId != null">
        equipId = #{equipId,jdbcType=BIGINT},
      </if>
      <if test="executeOrgId != null">
        executeOrgId = #{executeOrgId,jdbcType=BIGINT},
      </if>
      <if test="executeUser != null">
        executeUser = #{executeUser,jdbcType=BIGINT},
      </if>
      <if test="certificateNo != null">
        certificateNo = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="certificateFileName != null">
        certificateFileName = #{certificateFileName,jdbcType=VARCHAR},
      </if>
      <if test="certificateFilePath != null">
        certificateFilePath = #{certificateFilePath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        acceptTime = #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeTime != null">
        executeTime = #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedTime != null">
        finishedTime = #{finishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null">
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clinicalmall.kuaixiu.persistent.domain.Work">
    update work
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      deleteStatus = #{deleteStatus,jdbcType=INTEGER},
      planId = #{planId,jdbcType=BIGINT},
      periodType = #{periodType,jdbcType=INTEGER},
      period = #{period,jdbcType=INTEGER},
      executePermission = #{executePermission,jdbcType=INTEGER},
      origin = #{origin,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      orgId = #{orgId,jdbcType=BIGINT},
      labId = #{labId,jdbcType=BIGINT},
      providerId = #{providerId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      createUser = #{createUser,jdbcType=BIGINT},
      updateUser = #{updateUser,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      equipId = #{equipId,jdbcType=BIGINT},
      executeOrgId = #{executeOrgId,jdbcType=BIGINT},
      executeUser = #{executeUser,jdbcType=BIGINT},
      certificateNo = #{certificateNo,jdbcType=VARCHAR},
      certificateFileName = #{certificateFileName,jdbcType=VARCHAR},
      certificateFilePath = #{certificateFilePath,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      acceptTime = #{acceptTime,jdbcType=TIMESTAMP},
      executeTime = #{executeTime,jdbcType=TIMESTAMP},
      finishedTime = #{finishedTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and _databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and _databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and _databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
</mapper>