/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.clinicalmall.kuaixiu.controller;

import com.clinicalmall.kuaixiu.vo.CommonResponse;
import com.clinicalmall.kuaixiu.vo.GetPlanRequest;
import com.clinicalmall.kuaixiu.vo.GetPlanResponse;
import com.clinicalmall.kuaixiu.vo.PlanDeleteRequest;
import com.clinicalmall.kuaixiu.vo.PlanListRequest;
import com.clinicalmall.kuaixiu.vo.PlanListResponse;
import com.clinicalmall.kuaixiu.vo.PlanSaveRequest;
import com.clinicalmall.kuaixiu.vo.PlanUpdateStatusRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Optional;

@Api(value = "Plan", description = "the Plan API")
public interface PlanApi {

    @ApiOperation(value = "删除计划", nickname = "delete", notes = "删除计划", response = CommonResponse.class, tags={ "plan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/plan/delete",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> delete(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody PlanDeleteRequest body);


    @ApiOperation(value = "获取计划列表", nickname = "getList", notes = "获取计划列表", response = PlanListResponse.class, tags={ "plan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = PlanListResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/plan/getList",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<PlanListResponse> getList(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody PlanListRequest body);


    @ApiOperation(value = "获取计划", nickname = "getPlan", notes = "获取计划", response = GetPlanResponse.class, tags={ "plan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = GetPlanResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/plan/getPlan",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<GetPlanResponse> getPlan(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody GetPlanRequest body);


    @ApiOperation(value = "创建/更新计划", nickname = "save", notes = "创建/更新计划", response = CommonResponse.class, tags={ "plan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/plan/save",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> save(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody PlanSaveRequest body);


    @ApiOperation(value = "更新计划状态", nickname = "updateStatus", notes = "更新计划状态", response = CommonResponse.class, tags={ "plan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/plan/updateStatus",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> updateStatus(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody PlanUpdateStatusRequest body);

}
