<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- 导入jdbc配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="localOverride" value="true" />
		<property name="order" value="0" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.clinicalmall.kuaixiu.service" />
	<context:component-scan base-package="com.clinicalmall.kuaixiu.wechat" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		<!-- 验证使用的SQL语句 -->
		<property name="validationQuery" value="${validationQuery}"></property>
		<!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. -->
		<property name="testWhileIdle" value="${testWhileIdle}"></property>
		<property name="testOnBorrow" value="${testOnBorrow}"></property>
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
		<property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"></property>
		<property name="removeAbandoned" value="${removeAbandoned}"></property>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"></property>
	</bean>
	<!-- using the multi-db feature you will need to set the databaseIdProvider 
		property -->
	<bean id="vendorProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="SQL Server">sqlserver</prop>
				<prop key="DB2">db2</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="MySQL">mysql</prop>
			</props>
		</property>
	</bean>
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations"
			value="classpath:com/clinicalmall/kuaixiu/persistent/mapper/*.xml"></property>
		<property name="databaseIdProvider" ref="databaseIdProvider" />
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.clinicalmall.kuaixiu.persistent.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />

</beans>