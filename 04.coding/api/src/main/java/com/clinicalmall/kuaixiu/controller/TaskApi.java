/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.clinicalmall.kuaixiu.controller;

import com.clinicalmall.kuaixiu.vo.CommonResponse;
import com.clinicalmall.kuaixiu.vo.GetTaskByTaskNoRequest;
import com.clinicalmall.kuaixiu.vo.GetTaskRequest;
import com.clinicalmall.kuaixiu.vo.GetTaskResponse;
import com.clinicalmall.kuaixiu.vo.TaskAcceptRequest;
import com.clinicalmall.kuaixiu.vo.TaskCancelRequest;
import com.clinicalmall.kuaixiu.vo.TaskCloseRequest;
import com.clinicalmall.kuaixiu.vo.TaskCommentRequest;
import com.clinicalmall.kuaixiu.vo.TaskDeleteRequest;
import com.clinicalmall.kuaixiu.vo.TaskExamineRequest;
import com.clinicalmall.kuaixiu.vo.TaskExecuteRequest;
import com.clinicalmall.kuaixiu.vo.TaskListRequest;
import com.clinicalmall.kuaixiu.vo.TaskListResponse;
import com.clinicalmall.kuaixiu.vo.TaskModifyRequest;
import com.clinicalmall.kuaixiu.vo.TaskSaveRequest;
import com.clinicalmall.kuaixiu.vo.TaskSendBackRequest;
import com.clinicalmall.kuaixiu.vo.TaskSupplementRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Optional;

@Api(value = "Task", description = "the Task API")
public interface TaskApi {

    @ApiOperation(value = "接受任务", nickname = "accept", notes = "接受任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/accept",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> accept(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskAcceptRequest body);


    @ApiOperation(value = "取消任务", nickname = "cancel", notes = "取消任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/cancel",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> cancel(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskCancelRequest body);


    @ApiOperation(value = "关闭任务", nickname = "close", notes = "关闭任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/close",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> close(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskCloseRequest body);


    @ApiOperation(value = "评价任务", nickname = "comment", notes = "评价任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/comment",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> comment(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskCommentRequest body);


    @ApiOperation(value = "删除任务", nickname = "delete", notes = "删除任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/delete",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> delete(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskDeleteRequest body);


    @ApiOperation(value = "验收任务", nickname = "examine", notes = "验收任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/examine",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> examine(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskExamineRequest body);


    @ApiOperation(value = "执行任务", nickname = "execute", notes = "执行任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/execute",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> execute(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskExecuteRequest body);


    @ApiOperation(value = "获取任务列表", nickname = "getList", notes = "获取任务列表", response = TaskListResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TaskListResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/getList",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<TaskListResponse> getList(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskListRequest body);


    @ApiOperation(value = "获取任务", nickname = "getTask", notes = "获取任务", response = GetTaskResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = GetTaskResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/getTask",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<GetTaskResponse> getTask(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody GetTaskRequest body);


    @ApiOperation(value = "获取任务", nickname = "getTaskByTaskNo", notes = "获取任务", response = GetTaskResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = GetTaskResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/getTaskByTaskNo",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<GetTaskResponse> getTaskByTaskNo(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody GetTaskByTaskNoRequest body);


    @ApiOperation(value = "修改任务", nickname = "modify", notes = "修改任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/modify",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> modify(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskModifyRequest body);


    @ApiOperation(value = "创建任务", nickname = "save", notes = "创建任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/save",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> save(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskSaveRequest body);


    @ApiOperation(value = "退回任务", nickname = "sendBack", notes = "退回任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/sendBack",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> sendBack(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskSendBackRequest body);


    @ApiOperation(value = "补充任务", nickname = "supplement", notes = "补充任务", response = CommonResponse.class, tags={ "task", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CommonResponse.class) })
    @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "token", required=true, dataType = "String", paramType = "header")
    })
    @RequestMapping(value = "/task/supplement",
        produces = "application/json",
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommonResponse> supplement(@ApiParam(value = "token" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "请求消息" ,required=true )  @Valid @RequestBody TaskSupplementRequest body);

}
